{"version":3,"sources":["components/AppNavbar.js","actions/itemActions.js","actions/types.js","components/ItemEditModal.js","components/ShoppingList.js","components/ItemModal.js","reducers/itemReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","_this","setState","react_default","a","createElement","reactstrap_es","color","dark","expand","className","onClick","this","href","navbar","Component","axios","interceptors","request","use","console","log","response","setItemsLoading","type","ItemEditModal","modal","key","name","onChange","e","target","value","Object","defineProperty","onEditClick","id","onSubmit","changeItem","props","editItem","size","bind","for","placeholder","style","marginTop","block","connect","item","dispatch","newItem","post","concat","then","res","payload","r","catch","err","ShoppingList","onDeleteClick","deleteItem","getItems","_this2","items","react_transition_group","map","_ref","_id","timeout","classNames","components_ItemEditModal","get","data","delete","ItemModal","preventDefault","addItem","marginBottom","initialState","loading","combineReducers","arguments","length","undefined","action","objectSpread","toConsumableArray","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_AppNavbar","components_ItemModal","components_ShoppingList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.533448f7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from \"reactstrap\";\r\n\r\nclass AppNavbar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n          <Container>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <NavbarBrand href=\"/\">ShoppingList</NavbarBrand>\r\n\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"https://gitub.com/saipread.m\">Github</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppNavbar;\r\n","import axios from 'axios';\r\nimport {GET_ITEMS, ADD_ITEM, DELETE_ITEM, EDIT_ITEM, ITEMS_LOADING} from './types';\r\n\r\naxios.interceptors.request.use(request => {\r\n    console.log('Starting Request', request)\r\n    return request\r\n  })\r\n  \r\n  axios.interceptors.response.use(response => {\r\n    console.log('Response:', response)\r\n    return response\r\n  })\r\n\r\nexport const getItems = () => dispatch => {\r\n    dispatch(setItemsLoading());\r\n\r\n    axios\r\n        .get('/api/items').then(res => \r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload : res.data\r\n            }))\r\n}\r\n\r\nexport const addItem = item => dispatch => {\r\n    axios\r\n        .post('/api/items', item)\r\n        .then(res => \r\n            dispatch({\r\n            type: ADD_ITEM,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const deleteItem = (id) => dispatch => {\r\n    axios\r\n        .delete(`/api/items/${id}`)\r\n        .then( res => \r\n            dispatch({\r\n            type: DELETE_ITEM,\r\n            payload: id\r\n        }))\r\n}\r\n\r\nexport const editItem = (id,name) => dispatch => {\r\n    console.log(\"Edit Item\", id, name);\r\n\r\n    const newItem = {\r\n        name\r\n    };\r\n    console.log(\"newItem\", newItem);\r\n    axios\r\n        .post(`/api/items/${id}`, newItem)\r\n        .then( res => dispatch({\r\n            type: EDIT_ITEM,\r\n            payload: {id, newItem}\r\n        }))\r\n        .then( r => dispatch(\r\n            setItemsLoading()\r\n        )\r\n        ).catch( err => {\r\n            console.log(err);\r\n        });\r\n        //dispatch(setItemsLoading());\r\n}\r\n\r\nexport const setItemsLoading = () => {\r\n    return {\r\n        type: ITEMS_LOADING\r\n    }\r\n}","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\nexport const EDIT_ITEM = 'EDIT_ITEM';","import React, { Component } from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {editItem} from '../actions/itemActions';\r\n\r\nclass ItemEditModal extends Component {\r\n   state= {\r\n       modal : false,\r\n       key: '',\r\n       name : ''\r\n   }\r\n   componentDidMount() {\r\n    //console.log('componentDidMount ... ');\r\n    //console.log(this.state ,this.props);\r\n   }\r\n   toggle = () => {\r\n       this.setState( {\r\n           modal : !this.state.modal,\r\n           key: this.state.key,\r\n           name: this.state.name\r\n       })\r\n   }\r\n\r\n   onChange = (e) => {\r\n    console.log('change ... ', e.target.name, e.target.value);\r\n    this.setState({\r\n        [e.target.name] : e.target.value\r\n    })\r\n   }\r\n\r\n   onEditClick = ( id, name) => {\r\n    this.toggle();\r\n    \r\n    }\r\n\r\n   onSubmit = (e) => {\r\n    //e.preventDefault();\r\n       console.log('submitting ... ', e.target, this.state)\r\n       const changeItem = {\r\n        name: this.state.name\r\n        };\r\n\r\n    let id = this.props.id\r\n    this.props.editItem(id, changeItem.name);\r\n    this.toggle();\r\n\r\n   }\r\n  render() {\r\n      \r\n      let key = this.props.id;\r\n      let name = this.props.name;\r\n      //console.log(this.props, key, name);\r\n    return (\r\n      <div>\r\n        <Button\r\n            className=\"btn-mini\"\r\n            color=\"inverse\"\r\n            size=\"sm\"\r\n            name=\"id\"\r\n            id=\"key\"\r\n            onClick={this.onEditClick.bind(this,key, name)}>\r\n            Edit\r\n        </Button>\r\n        <Modal isOpen={this.state.modal}\r\n        toggle={this.toggle}>\r\n        <ModalHeader toggle={this.toggle}>\r\n        Edit Item to Shopping List</ModalHeader>\r\n        <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n                <FormGroup>\r\n                    <Label for=\"item\">Item</Label>\r\n                    <Input type=\"text\" name=\"name\" id=\"item\" placeholder={name} \r\n                    onChange={this.onChange}/>\r\n                    <Button color=\"dark\"\r\n                    style={{marginTop: '2rem'}}\r\n                    block> Update Item </Button>\r\n                </FormGroup>\r\n            </Form>\r\n        </ModalBody>\r\n        </Modal>        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ( {\r\n    item: state.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {editItem})(ItemEditModal);\r\n","import React, {Component} from 'react';\r\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\nimport {getItems, deleteItem} from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\nimport ItemEditModal from './ItemEditModal';\r\n\r\n\r\nclass ShoppingList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getItems();\r\n    }\r\n\r\n    onDeleteClick = (id) => {\r\n        this.props.deleteItem(id);\r\n    }\r\n\r\n\r\n  render() {\r\n    const {items} = this.props.item;\r\n    return (\r\n      <Container>\r\n\r\n        <ListGroup>\r\n            <TransitionGroup className=\"shopping-list\">\r\n            {items.map(({_id , name}) => (\r\n                <CSSTransition key={_id} timeout={2000} classNames=\"fade\">\r\n                <ListGroupItem>\r\n                    <Button\r\n                    className=\"remove-btn\"\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={this.onDeleteClick.bind(this,_id)}>&times;</Button>\r\n                    {name} \r\n                    <div className=\"float-right\">\r\n                        <ItemEditModal id={_id} name={name}/>\r\n                    </div>\r\n                </ListGroupItem>\r\n                </CSSTransition>\r\n            ))}\r\n            </TransitionGroup>\r\n        </ListGroup>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n    deleteItem: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n});\r\n\r\nexport default  connect(mapStateToProps, {getItems, deleteItem})(ShoppingList);\r\n","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport {connect} from 'react-redux';\r\nimport {addItem} from '../actions/itemActions';\r\n\r\nclass ItemModal extends Component {\r\n    state = {\r\n        modal: false,\r\n        name: ''\r\n    }\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newItem = {\r\n            name: this.state.name\r\n        };\r\n\r\n        this.props.addItem(newItem);\r\n        this.toggle();\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n        color=\"dark\"\r\n        style={{marginBottom: '2rem'}}\r\n        onClick={this.toggle}>Add Item</Button>\r\n        <Modal isOpen={this.state.modal}\r\n        toggle={this.toggle}>\r\n        <ModalHeader toggle={this.toggle}>\r\n        Add Item to Shopping List</ModalHeader>\r\n        <ModalBody>\r\n            <Form onSubmit={this.onSubmit}>\r\n                <FormGroup>\r\n                    <Label for=\"item\">Item</Label>\r\n                    <Input type=\"text\" name=\"name\" id=\"item\" placeholder=\"Enter a valid Item name\"\r\n                    onChange={this.onChange}/>\r\n                    <Button color=\"dark\"\r\n                    style={{marginTop: '2rem'}}\r\n                    block> Add Item </Button>\r\n                </FormGroup>\r\n            </Form>\r\n        </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ( {\r\n    item: state.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {addItem})(ItemModal);\r\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, EDIT_ITEM } from '../actions/types';\r\n\r\nconst initialState = {\r\n    items : [],\r\n    loading : false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ITEMS: \r\n        return {\r\n            ...state,\r\n            items: action.payload,\r\n            loading: false\r\n        }\r\n        case ADD_ITEM: \r\n        return {\r\n            ...state,\r\n            items: [action.payload, ...state.items]\r\n        }        \r\n        case DELETE_ITEM: \r\n        return {\r\n            ...state,\r\n            items: state.items.filter(item => item._id !== action.payload)\r\n        }\r\n        case EDIT_ITEM: \r\n        return {\r\n            ...state,\r\n            items: [action.payload, ...state.items.filter(item => item._id !== action.payload)]\r\n        }        \r\n        default:\r\n        return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport itemReducer from './itemReducer';\r\n\r\nexport default combineReducers({\r\n    item: itemReducer\r\n})","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n)\r\n\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport {Container} from 'reactstrap';\nimport AppNavbar from './components/AppNavbar';\nimport ShoppingList from './components/ShoppingList';\nimport ItemModal from './components/ItemModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <div className=\"App\">\n        <AppNavbar />\n        <Container>\n        <ItemModal/>  \n        <ShoppingList />\n        \n        </Container>\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}